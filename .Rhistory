print(mode)
# Standart deviation for Speaker1 and Speaker2
print(sd(Speaker1Counts))
a <- read.csv("~/dialoguesystems/a.csv")
View(a)
#setwd("/Users//Documents/...")
mydata <- read.csv("a.csv", header=TRUE, sep=",")
setwd("/Users/obadiah/dialoguesystems")
mydata <- read.csv("a.csv", header=TRUE, sep=",")
# putting the number of words per utterance into a list for Speaker1 and Speaker2
Speaker1Counts <- subset(mydata, Speaker==1)$Counts
Speaker2Counts <- subset(mydata, Speaker==2)$Counts
# Median value for Speaker1 and Speaker2
print(median(Speaker1Counts))
print(median(Speaker2Counts))
# Mode value for Speaker1 and Speaker2
mode <- print(names(sort(-table(Speaker1Counts)))[1])
print(mode)
# Standart deviation for Speaker1 and Speaker2
print(sd(Speaker1Counts))
print(sd(Speaker2Counts))
# Histogram. Still working on it
hist(Speaker1Counts,
main="Histogram",
xlab="Number",
ylab="Frequency",
border="blue",
col="green",
ylim = c(0, 10.0),
breaks=length(Speaker1Counts))
hist(Speaker1Counts,
main="Histogram",
xlab="Number",
ylab="Frequency",
border="blue",
col="green",
ylim = c(0, 10.0),
breaks=length(Speaker1Counts))
set.seed(42)
p1 <- hist(Speaker1Counts)
p2 <- hist(Speaker2Counts)
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,10))  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,10), add=T)  # second
# set the file address:
setwd("/Users/obadiah/dialoguesystems")
mydata <- read.csv("a.csv", header=TRUE, sep=",")
# putting the number of words per utterance into a list for Speaker1 and Speaker2
Speaker1Counts <- subset(mydata, Speaker==1)$Counts
Speaker2Counts <- subset(mydata, Speaker==2)$Counts
# Median value for Speaker1 and Speaker2
print(median(Speaker1Counts))
print(median(Speaker2Counts))
# Mode value for Speaker1 and Speaker2
mode <- print(names(sort(-table(Speaker1Counts)))[1])
print(mode)
# Standart deviation for Speaker1 and Speaker2
print(sd(Speaker1Counts))
print(sd(Speaker2Counts))
# Max count for each speaker (to size the histogram)
print(max(Speaker1Counts))
print(max(Speaker2Counts))
# Histogram. Still working on it
hist(Speaker1Counts,
main="Histogram",
xlab="Number",
ylab="Frequency",
p1 <- hist(Speaker1Counts)
p2 <- hist(Speaker2Counts)
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,267))  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,267), add=T)  # second
View(a)
# what data type are our two speaker count sets stored as?
print(methods(Speaker1Counts))
# what data type are our two speaker count sets stored as?
print(typeof(Speaker1Counts))
# what data type are our two speaker count sets stored as?
print(class(Speaker1Counts))
print(attributes(Speaker1Counts))
# Histogram. Still working on it
p1 <- hist(Speaker1Counts)
p2 <- hist(Speaker2Counts)
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,85))  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,267), add=T)  # second
print(attributes(Speaker1Counts))
# Histogram. Still working on it
# hist(Speaker1Counts,
#     main="Histogram",
#     xlab="Number",
#     ylab="Frequency",
#     border="blue",
#     col="green",
#     ylim = c(0, 10.0),
#    breaks=length(Speaker1Counts))
p1 <- hist(Speaker1Counts)
p1 <- hist(Speaker1Counts)
p2 <- hist(Speaker2Counts)
plot( p1, col=rgb(0,0,1,1/4))  # first histogram
plot( p2, col=rgb(1,0,0,1/4), add=T)  # second
p1 <- hist(Speaker1Counts)
p2 <- hist(Speaker2Counts)
p2 <- hist(Speaker2Counts)
p1 <- hist(Speaker1Counts)
plot( p1, col=rgb(0,0,1,1/4))  # first histogram
plot( p1, col=rgb(0,0,1,1/4))  # first histogram
plot( p2, col=rgb(1,0,0,1/4), add=T)  # second
p2 <- hist(Speaker2Counts)
p1 <- hist(Speaker1Counts)
plot( p1, col=rgb(0,0,1,1/4))  # first histogram
points( p2, col=rgb(1,0,0,1/4), add=T)  # second
p2 <- hist(Speaker2Counts)
p1 <- hist(Speaker1Counts)
plot( p1, col=rgb(0,0,1,1/4))  # first histogram
points( p2, y = NULL, col=rgb(1,0,0,1/4), add=T)  # second
p2 <- hist(Speaker2Counts)
p1 <- hist(Speaker1Counts)
print(p1)
print(p2)
p2 <- hist(Speaker2Counts)
p1 <- hist(Speaker1Counts, add=T)
# print(p2)
plot( p1, col=rgb(0,0,1,1/4))  # first histogram
plot( p2, col=rgb(1,0,0,1/4), add=T)  # second
plot( p2, col=rgb(1,0,0,1/4))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,20))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,40))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
p2 <- hist(Speaker2Counts,
main="Histogram of Word Counts by Both Speakers",
xlab="Number",
ylab="Frequency",
breaks=length(Speaker1Counts))
p1 <- hist(Speaker1Counts, breaks=length(Speaker1Counts))
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
p2 <- hist(Speaker2Counts,
main="Histogram of Word Counts by Both Speakers",
xlab="Number",
ylab="Frequency",
breaks=length(Speaker1Counts))
p1 <- hist(Speaker1Counts, breaks=length(Speaker1Counts))
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
plot( p2, col=rgb(1,0,0,1/4), ymax=30)  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
plot( p2, col=rgb(1,0,0,1/4), ylim=(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
plot( p2, col=rgb(1,0,0,1/4), ylim=(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
p2 <- hist(Speaker2Counts,
main="Histogram of Word Counts by Both Speakers",
xlab="Number",
ylab="Frequency",
breaks=length(Speaker1Counts))
p1 <- hist(Speaker1Counts, breaks=length(Speaker1Counts))
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
p2 <- hist(Speaker2Counts,
main="Histogram of Word Counts by Both Speakers",
xlab="Number",
ylab="Frequency",
breaks=length(Speaker1Counts))
p1 <- hist(Speaker1Counts, breaks=length(Speaker1Counts))
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
p2 <- hist(Speaker2Counts,
main="Histogram of Word Counts by Both Speakers",
xlab="Number",
ylab="Frequency",
breaks=length(Speaker1Counts))
p1 <- hist(Speaker1Counts, breaks=length(Speaker1Counts))
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,10))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
p2 <- hist(Speaker2Counts,
main="Histogram of Word Counts by Both Speakers",
xlab="Number",
ylab="Frequency")
p1 <- hist(Speaker1Counts)
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,10))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
print(p1.$breaks)
print(p2.$breaks)
p2 <- hist(Speaker2Counts,
main="Histogram of Word Counts by Both Speakers",
xlab="Number",
ylab="Frequency",
breaks=6)
p1 <- hist(Speaker1Counts, breaks=6)
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,10))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
p2 <- hist(Speaker2Counts,
main="Histogram of Word Counts by Both Speakers",
xlab="Number",
ylab="Frequency",
breaks=6)
p1 <- hist(Speaker1Counts, breaks=6)
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,20))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
#setwd("/Users/obadiah/dialoguesystems")
mydata <- read.csv("a.csv", header=TRUE, sep=",")
# putting the number of words per utterance into a list for Speaker1 and Speaker2
Speaker1Counts <- subset(mydata, Speaker==1)$Counts
Speaker2Counts <- subset(mydata, Speaker==2)$Counts
# Median value for Speaker1 and Speaker2
print(median(Speaker1Counts))
print(median(Speaker2Counts))
# Mode value for Speaker1 and Speaker2
mode <- print(names(sort(-table(Speaker1Counts)))[1])
print(mode)
# Standart deviation for Speaker1 and Speaker2
print(sd(Speaker1Counts))
print(sd(Speaker2Counts))
# Histogram. Still working on it
# First
hist(Speaker1Counts,
main="Histogram",
xlab="Number",
ylab="Frequency",
border="blue",
col="green",
xlim = c(0, 100.0),
ylim = c(0, 30.0)
)
#Second
hist(Speaker2Counts,
main="Histogram",
xlab="Number",
ylab="Frequency",
border="blue",
col="green",
xlim = c(0, 300.0),
ylim = c(0, 10.0),
breaks=length(Speaker2Counts))
#Both Link: http://www.theanalysisfactor.com/r-tutorial-part-12/
B <- c(Speaker1Counts, Speaker2Counts)
print(B)
hist(B,
main="Histogram",
xlab="Number",
ylab="Frequency",
border="blue",
col="green",
xlim = c(0, 300.0),
ylim = c(0, 20.0),
breaks=length(Speaker1Counts))
moredata <- read.csv("b.csv", header=TRUE, sep=",")
# putting the number of words per utterance into a list for Speaker1 and Speaker2
Speaker1Money <- subset(moredata, Speaker==1)$Money
Speaker2Money <- subset(moredata, Speaker==2)$Money
chisq.test(Speaker1Money, Speaker2Money, correct = TRUE,
p = rep(1/length(Speaker1Money), length(Speaker1Money)), rescale.p = FALSE,
simulate.p.value = FALSE, B = 2000)
moredata <- read.csv("c.csv", header=TRUE, sep=",")
moneystuff <- table(moredata$Money,smokerData$Speaker)
moredata <- read.csv("c.csv", header=TRUE, sep=",")
moneystuff <- table(moredata$Money,moredata$Speaker)
moredata <- read.csv("b.csv", header=TRUE, sep=",")
moneystuff <- table(moredata$Speaker,moredata$ContainsMoney)
print(moneystuff)
chisq.test(table(moneystuff))
p2 <- hist(Speaker2Counts,
main="Histogram of Word Counts by Both Speakers",
xlab="Number",
ylab="Frequency",
breaks=6)
p1 <- hist(Speaker1Counts, breaks=6)
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,20))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
p2 <- hist(Speaker2Counts,
main="Histogram of Word Counts by Both Speakers",
xlab="Number",
ylab="Frequency",
breaks=10)
p1 <- hist(Speaker1Counts, breaks=10)
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
p2 <- hist(Speaker2Counts,
xlab="Number",
ylab="Frequency",
breaks=10)
p1 <- hist(Speaker1Counts, main="Histogram of Word Counts by Both Speakers", breaks=10)
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
p1 <- hist(Speaker1Counts, main="Histogram of Word Counts by Both Speakers", breaks=10)
# print(p1)
# print(p2)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
Words_in_Utterance <- Speaker2Counts
p2 <- hist(Words_in_Utterance,
xlab="Number",
ylab="Frequency",
breaks=10)
p1 <- hist(Speaker1Counts, main="Histogram of Word Counts by Both Speakers", breaks=10)
plot( p2, col=rgb(1,0,0,1/4), ylim=c(0,30))  # second
plot( p1, col=rgb(0,0,1,1/4), add=T)  # first histogram
moredata <- read.csv("b.csv", header=TRUE, sep=",")
moredata <- read.csv("b.csv", header=TRUE, sep=",")
tbl = table(moredata$Speaker,moredata$ContainsMoney)
chisq.test(tbl, correct = FALSE)
